#!/usr/bin/env bash
# init script to handle start, stop, and restart options.

# Check if user is root
if [[ $EUID -ne 0 ]]
then
	echo "This script must be run as root"
	exit 1
fi

# Essential Variables
PIDFILE=/var/run/my_process.pid
CMD=./manage_my_process

# Essential Options Functions

# Function to start the daemon process.
start()
{
	# Check if the process is already running.
	if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE")" 2> /dev/null
	then
		echo "manage_my_process is already running"
		exit 1
	fi

	# echo "Starting manage_my_process..."

	# Set a variable to indicate that the function was called directly.
	if [ -z "$RESTART_FLAG" ]
	then
		START_FLAG=true
	fi

	# Fork Process to run in the background.
	$CMD &

	# Redirect the Forked PID to the .pid file.
	echo $! > "$PIDFILE"
	if [ "$START_FLAG" = true ]
	then
		echo "manage_my_process started"
	fi
}

# Function to stop the daemon process.
stop()
{
	if [ ! -f "$PIDFILE" ]
	then
		echo "manage_my_process is not running"
		exit 1
	fi

	# Set a variable to indicate that the function was called directly.
	if [ -z "$RESTART_FLAG" ]
	then
		STOP_FLAG=true
	fi

	# Send SIGTERM signal to the process.
	kill "$(cat "$PIDFILE")"

	# Remove the PID file
	rm "$PIDFILE"

	if [ "$STOP_FLAG" = true ]
	then
		echo "manage_my_process stopped"
	fi
}

# Function to restart the daemon process.
restart()
{
	RESTART_FLAG=true
	stop 	# Stop the program daemon using stop()
	start	# Start the program daemon using start() function
	if [ "$RESTART_FLAG" = true ]
	then
		echo "manage_my_process restarted"
	fi
	RESTART_FLAG=''
}

# Functionality using case $1 is the first positional CL argument.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	*)
		echo "Usage: manage_my_process {start|stop|restart}"
		exit 1
		;;
esac

exit 0
